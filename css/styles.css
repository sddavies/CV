body {
	margin: 0;
	/*set this in the parent container to align all children centrally 
	  if the child element has a specific width value set then it may not comply.
	  In this case, use the css margin: attribute in the child to aut-set the left and right nargins.
	  E.g. margin: 0 auto 0 auto (or margin: 0 auto; for short);
	  This should then correct it   
	*/
	text-align: center;
	font-family: "Merriweather", serif;
	font-size: 1em;
}

h1 {
	margin: 0;
	font-family: "Courgette", cursive;
	font-size: 3rem; /* rem is the root em so it won't scale up if you set a base font-size of say 2em in the body. NB. 1em = 100% = 16px */
	color: firebrick;
}

/*
h1 {
	margin-top: 0;
	font-family: "Sacramento", cursive;S
}
*/

h2 {
	font-family: "Montserrat", sans-serif;
	font-size: 2.5rem;
	color: firebrick;
}

h3 {
	font-family: "Montserrat", sans-serif;
	font-size: 1.6rem;
	color: #e89441;
}

h4 {
	font-weight: 100;
	font-size: 1.2rem;
	font-style: italic;
	font-family: "Montserrat", sans-serif;
}

hr {
	margin: 40px auto;
	border-style: dotted none none none;
	border-width: 9px;
	border-color: #e89441;
	width: 5pc;
	/*
	border: 0.6pc dotted rgb(245, 184, 110);
	border-bottom: none;
	border-left: none;
	border-right: none;
	margin: 20px auto;
	width: 6%;
	*/
}

/***** class selectors ****/
.top-container {
	/*default position is static. Changing to relative means any changes to position of this element will be relative to itself
	  E.g. left: 20px; would move the left edge of any .top-container to the right of it's static left edge position by 20px
	       right: 20px; would move the right edge of any .top-container to the left of it's static left edge position by 20px
		   The static positions of other sibling elements will not be affected by relative changes.
	  
	  position: relative is also set in a container (without any changes to actual position) to make it a perfect container for
	  moving child elements in relation to the container using absolute position (see .bottom-cloud & .top-cloud as examples).
	  Important!. If you don't set the parent container to position:relative then the child elements will be moved in relation
	              to the body element (not the div) when position:abolute is used.

	  position:absolute is used to position an element in relation to it's parent container.
	  so that right: 20px; would move a child elements right edge to 20px to the left of the parent containers right edge.
	  With absolute positioning, the static positions of sibling elements are affected (as if the changed element has been removed
	  from the static position hierarchy).
	  So relative positioning can be used where you want to preserve sibling positions in their original state and abolute where 
	  the position of elements to the parent are paramount.  	   
	*/
	position: relative;
	background-color: #f5eedc;
	padding-top: 100px;
}

.bottom-cloud {
	/*As well as position the cloud in relation to the edge of its parent, this also takes it out of the static flow
	  and, as a result, fixes the mountain image so that it centres correctly*/
	position: absolute;
	left: 250px;
	bottom: 300px;
}

.top-cloud {
	position: absolute;
	right: 300px;
	top: 50px;
}

h2.welcome {
	font-family: "Sacramento", cursive;
	margin: 30px 0 0 0;
	color: black;
}

div.profile {
	display: flex;
	justify-content: center;
}

div.intro {
	display: inline-block;
	margin: auto 20px;
}

img.grouch {
	width: 200px;
	height: 200px;
	border-radius: 100%;
	margin: auto 0;
}

img.wind-up {
	width: 20%;
	/*The float attribute allow text to flow around the image. 
	In this case the image floats to the left of the text */
	float: left;
	margin-right: 30px;
	justify-content: center;
}

img.pc {
	width: 20%;
	/*The float attribute allow text to flow around the image. 
	In this case the image floats to the left of the text. 
	Be careful with float. Only use it for text-wrapping.
	Never for just positioning*/
	float: right;
	margin-left: 30px;
	justify-content: center;
}

h3.skill-row {
  margin: 0 auto;
}

p.skill-row {
    /*The following attribute would ensure that the paragraph appears below any left-floating 
	  or right-floating boxes such as the wind-up and pc images.
	  Basically cancels the float in the specified direction */
	/*clear: both;*/
}

div.skill-row {
	text-align: left;
	width: 50%;
	margin: 100px auto;
	line-height: 2;
}

span.bold {
	font-weight: 900;
}

span.norm {
	font-style: normal;
}

/*
div.contact-me {
  position: relative;
}
*/
p.contact-me {
  margin:0;
}

a.btn {
  /*Marging doesn't work on inline elements such as <a>. Need to change display to inline-block */
  display: inline-block;
  margin: 40px auto;
  background: #e89441;
  background-image: -webkit-linear-gradient(top, #e89441, firebrick);
  background-image: -moz-linear-gradient(top, #e89441, firebrick);
  background-image: -ms-linear-gradient(top, #e89441, firebrick);
  background-image: -o-linear-gradient(top, #e89441, firebrick);
  background-image: linear-gradient(to bottom, #e89441, firebrick);
  -webkit-border-radius: 28;
  -moz-border-radius: 28;
  border-radius: 28px;
  font-family: Arial;
  color: #ffffff;
  font-size: 20px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

a.btn:hover {
  background: #e89441;
  background-image: -webkit-linear-gradient(top, firebrick, #e89441);
  background-image: -moz-linear-gradient(top, firebrick, #e89441);
  background-image: -ms-linear-gradient(top, firebrick, #e89441);
  background-image: -o-linear-gradient(top, firebrick, #e89441);
  background-image: linear-gradient(to bottom, firebrick, #e89441);
  text-decoration: none;
}

div.bottom-container {
  background: #e89441;
  padding: 40px 0 40px 0;
}

a.footer-link {
  font-family: "Montserrat", sans-serif;
  margin:auto 20px;
  color: #f7d275;
  text-decoration: none;
}

a.footer-link:hover {
	/*font-weight: bolder;*/
	color: white;
}

a.thanks {
  font-family: "Montserrat", sans-serif;
  color: #f5eedc;
  text-decoration: none;
}

a.thanks:hover {
	font-weight: bolder;
}

p.footer {
  color: white;
  font-size: 0.8rem;
}
